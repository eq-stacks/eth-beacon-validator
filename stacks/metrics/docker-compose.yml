version: "3.7"
services:
  influxdb:
    image: influxdb:2.1
    restart: unless-stopped
    ports:
      - 8086:8086
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - influxdb_config:/etc/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_ORG
      - DOCKER_INFLUXDB_INIT_BUCKET
      - DOCKER_INFLUXDB_INIT_RETENTION
      - DOCKER_INFLUXDB_INIT_PASSWORD
      - DOCKER_INFLUXDB_INIT_USERNAME
    deploy:
      placement:
        constraints:
          - node.labels.metrics == true
    networks:
      traefik-swarm:
      default:
        aliases:
          - influxdb
      geth:
        aliases:
          - influxdb
    labels:
      traefik.enable: "true"
      traefik.http.routers.influxdb.rule: "Host(`influxdb.lan`)"
      traefik.http.routers.influxdb.entryPoints: "web"
      traefik.http.routers.influxdb.service: "influxdb"
      traefik.http.services.influxdb.loadbalancer.server.port: "8086"

  grafana:
    container_name: grafana
    image: grafana/grafana:8.3.3
    restart: always
    networks:
      - traefik-swarm
      - default
    deploy:
      placement:
        constraints:
          - node.labels.metrics == true
    volumes:
      - grafana_data:/var/lib/grafana
    labels:
      traefik.enable: "true"
      traefik.http.routers.grafana.rule: "Host(`grafana.lan`)"
      traefik.http.routers.grafana.entryPoints: "web"
      traefik.http.routers.grafana.service: "grafana"
      traefik.http.services.grafana.loadbalancer.server.port: "3000"

  prometheus:
    image: prom/prometheus
    networks:
      - traefik-swarm
      - default
      - geth
    configs:
      - source: prometheus.yml
        target: /etc/prometheus/prometheus.yml
    deploy:
      placement:
        constraints:
          - node.labels.metrics == true
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      traefik.enable: "true"
      traefik.http.routers.prometheus.rule: "Host(`prometheus.lan`)"
      traefik.http.routers.prometheus.entryPoints: "web"
      traefik.http.routers.prometheus.service: "prometheus"
      traefik.http.services.prometheus.loadbalancer.server.port: "9090"

volumes:
  grafana_data:
  influxdb_data:
    name: influxdb-data
  influxdb_config:
    name: influxdb-config

configs:
  prometheus.yml:
    external: true

networks:
  host:
    external: true
    name: host
  geth:
    external: true
    name: geth-goerli
  traefik-swarm:
    external: true